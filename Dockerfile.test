# Use the official Python base image as the foundation
FROM python:3.10

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Create and set the working directory
RUN mkdir /app
WORKDIR /app

# Install system dependencies and netcat for our wait script
RUN apt-get update -y && \
    apt-get install -y libssl-dev libffi-dev python3-dev netcat-openbsd

# Copy the requirements.txt file and install Python dependencies
COPY ./requirements.txt /app/requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy the wait script and make it executable
COPY ./wait_for_rabbitmq.sh /usr/wait-for-it.sh
RUN chmod +x /usr/wait-for-it.sh

# Copy the application code and files
COPY . /app/

# Environment variables
ENV MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
ENV MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
ENV DB_NAME=$DB_NAME
ENV REQUESTS_COLLECTION=$REQUESTS_COLLECTION
ENV TRAINING_PLANS_COLLECTION=$TRAINING_PLANS_COLLECTION
ENV USER_WITH_ACHIEVEMENTS_COLLECTION=$USER_WITH_ACHIEVEMENTS_COLLECTION
ENV PERSONAL_TRAINING_COLLECTION=$PERSONAL_TRAINING_COLLECTION
ENV PERSONAL_TRAINING_METADATA_COLLECTION=$PERSONAL_TRAINING_METADATA_COLLECTION
ENV PERSONAL_TRAINING_REPORT_COLLECTION=$PERSONAL_TRAINING_REPORT_COLLECTION
ENV RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
ENV RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
ENV RABBITMQ_HOST=$RABBITMQ_HOST
ENV ADMIN_TOKEN=$ADMIN_TOKEN


# Expose the port that the FastAPI app runs on
EXPOSE 8000

# Run the FastAPI app
CMD ["python", "main.py"]